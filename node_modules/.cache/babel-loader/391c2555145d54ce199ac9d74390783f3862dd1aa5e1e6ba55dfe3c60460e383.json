{"ast":null,"code":"import { ValidatorConstants } from \"../types/validationTypes\";\nconst validateRequired = value => {\n  if (typeof value == \"undefined\" || value === null) return false;\n  if (typeof value == \"string\" && value.length === 0) return false;\n  if (typeof value == \"number\" && isNaN(value)) return false;\n  return true;\n};\nconst validateLengthMax = (max, value) => {\n  if (typeof max === \"undefined\") return true;\n  if (typeof value === \"number\" && value.toString().length > max || typeof value === \"string\" && value.length > max) {\n    return false;\n  }\n  return true;\n};\nconst validateLengthMin = (min, value) => {\n  if (typeof min === \"undefined\") return true;\n  if (typeof value === \"number\" && value.toString().length < min || typeof value === \"string\" && value.length < min) {\n    return false;\n  }\n  return true;\n};\nconst validateOne = (valdation, value) => {\n  switch (valdation.type) {\n    case ValidatorConstants.REQUIRED:\n      return validateRequired(value);\n    case ValidatorConstants.LENGTH_MIN:\n      return validateLengthMin(valdation.minLength, value);\n    case ValidatorConstants.LENGTH_MAX:\n      return validateLengthMax(valdation.maxLength, value);\n  }\n  return true;\n};\nexport default {\n  ValidatorConstants,\n  validateOne\n};","map":{"version":3,"names":["ValidatorConstants","validateRequired","value","length","isNaN","validateLengthMax","max","toString","validateLengthMin","min","validateOne","valdation","type","REQUIRED","LENGTH_MIN","minLength","LENGTH_MAX","maxLength"],"sources":["C:/React/publish library/swtich-theme/src/utils/validation.ts"],"sourcesContent":["import { ValidatorConstants } from \"../types/validationTypes\";\r\n\r\nconst validateRequired = (value: unknown) => {\r\n    if (typeof value == \"undefined\" || value === null) return false\r\n    if (typeof value == \"string\" && value.length === 0) return false\r\n    if (typeof value == \"number\" && isNaN(value)) return false\r\n    return true\r\n}\r\n\r\nconst validateLengthMax = (max: number | undefined, value: number | string): boolean => {\r\n    if (typeof max === \"undefined\") return true\r\n\r\n    if (typeof value === \"number\" && value.toString().length > max ||\r\n        typeof value === \"string\" && value.length > max\r\n    ) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\nconst validateLengthMin = (min: number | undefined, value: number | string): boolean => {\r\n    if (typeof min === \"undefined\") return true\r\n\r\n    if (typeof value === \"number\" && value.toString().length < min ||\r\n        typeof value === \"string\" && value.length < min\r\n    ) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\nconst validateOne = (valdation: ValidatorDefinition, value: number | string): boolean => {\r\n    switch (valdation.type) {\r\n        case ValidatorConstants.REQUIRED:\r\n            return validateRequired(value)\r\n        case ValidatorConstants.LENGTH_MIN:\r\n            return validateLengthMin(valdation.minLength, value)\r\n        case ValidatorConstants.LENGTH_MAX:\r\n            return validateLengthMax(valdation.maxLength, value)\r\n    }\r\n    return true\r\n}\r\n\r\nexport default { ValidatorConstants, validateOne }"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,0BAA0B;AAE7D,MAAMC,gBAAgB,GAAIC,KAAc,IAAK;EACzC,IAAI,OAAOA,KAAK,IAAI,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,KAAK;EAC/D,IAAI,OAAOA,KAAK,IAAI,QAAQ,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;EAChE,IAAI,OAAOD,KAAK,IAAI,QAAQ,IAAIE,KAAK,CAACF,KAAK,CAAC,EAAE,OAAO,KAAK;EAC1D,OAAO,IAAI;AACf,CAAC;AAED,MAAMG,iBAAiB,GAAG,CAACC,GAAuB,EAAEJ,KAAsB,KAAc;EACpF,IAAI,OAAOI,GAAG,KAAK,WAAW,EAAE,OAAO,IAAI;EAE3C,IAAI,OAAOJ,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACK,QAAQ,EAAE,CAACJ,MAAM,GAAGG,GAAG,IAC1D,OAAOJ,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,MAAM,GAAGG,GAAG,EACjD;IACE,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf,CAAC;AAED,MAAME,iBAAiB,GAAG,CAACC,GAAuB,EAAEP,KAAsB,KAAc;EACpF,IAAI,OAAOO,GAAG,KAAK,WAAW,EAAE,OAAO,IAAI;EAE3C,IAAI,OAAOP,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACK,QAAQ,EAAE,CAACJ,MAAM,GAAGM,GAAG,IAC1D,OAAOP,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,MAAM,GAAGM,GAAG,EACjD;IACE,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,SAA8B,EAAET,KAAsB,KAAc;EACrF,QAAQS,SAAS,CAACC,IAAI;IAClB,KAAKZ,kBAAkB,CAACa,QAAQ;MAC5B,OAAOZ,gBAAgB,CAACC,KAAK,CAAC;IAClC,KAAKF,kBAAkB,CAACc,UAAU;MAC9B,OAAON,iBAAiB,CAACG,SAAS,CAACI,SAAS,EAAEb,KAAK,CAAC;IACxD,KAAKF,kBAAkB,CAACgB,UAAU;MAC9B,OAAOX,iBAAiB,CAACM,SAAS,CAACM,SAAS,EAAEf,KAAK,CAAC;EAAA;EAE5D,OAAO,IAAI;AACf,CAAC;AAED,eAAe;EAAEF,kBAAkB;EAAEU;AAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}